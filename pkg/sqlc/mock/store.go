// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/darwishdev/obd_api/pkg/sqlc/gen (interfaces: Store)

// Package mockdb is a generated GoMock package.
package mockdb

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	db "github.com/darwishdev/obd_api/pkg/sqlc/gen"
)

// MockStore is a mock of Store interface.
type MockStore struct {
	ctrl     *gomock.Controller
	recorder *MockStoreMockRecorder
}

// MockStoreMockRecorder is the mock recorder for MockStore.
type MockStoreMockRecorder struct {
	mock *MockStore
}

// NewMockStore creates a new mock instance.
func NewMockStore(ctrl *gomock.Controller) *MockStore {
	mock := &MockStore{ctrl: ctrl}
	mock.recorder = &MockStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStore) EXPECT() *MockStoreMockRecorder {
	return m.recorder
}

// ProductCreate mocks base method.
func (m *MockStore) ProductCreate(arg0 context.Context, arg1 db.ProductCreateParams) (db.Product, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProductCreate", arg0, arg1)
	ret0, _ := ret[0].(db.Product)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ProductCreate indicates an expected call of ProductCreate.
func (mr *MockStoreMockRecorder) ProductCreate(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProductCreate", reflect.TypeOf((*MockStore)(nil).ProductCreate), arg0, arg1)
}

// ProductGet mocks base method.
func (m *MockStore) ProductGet(arg0 context.Context, arg1 int64) (db.ProductGetRow, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProductGet", arg0, arg1)
	ret0, _ := ret[0].(db.ProductGetRow)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ProductGet indicates an expected call of ProductGet.
func (mr *MockStoreMockRecorder) ProductGet(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProductGet", reflect.TypeOf((*MockStore)(nil).ProductGet), arg0, arg1)
}
